---
import BaseHead from '@/components/BaseHead.astro';
import Header from '@/components/Header.astro';
import Footer from '@/components/Footer.astro';
import { SITE_TITLE, SITE_DESCRIPTION } from '@/consts';
import FormattedDate from '@/components/FormattedDate.astro';

interface Props {
  posts: any[];
	currentPage: number,
	lastPage: number,
}

const { posts, currentPage = 1, lastPage = 1 } = Astro.props

---

<!doctype html>
<html lang="zh-Hant">
	<head>
		<BaseHead title={SITE_TITLE} description={SITE_DESCRIPTION} />
	</head>
	<body>
		<Header />
		<main>
			<section>
				<ul class="flex flex-col gap-[20px]">
					{
						posts.map(post => (
							<li class="mb-[40px]">
								{/* <img class={ ` ${ index ? '!rounded-none' : '!mb-0 shrink-0 h-[400px] !w-[600px] object-cover' }` } src={post.data.heroImage} /> */}
								<div class="m-0 text-left box-border">
									<h2 class="p-0 mt-0 mx-0 font-bold text-[1.6rem] sm:text-[2rem]">{post.data.title}</h2>
									<p class="p-0 m-0 leading-[2] line-clamp-2 text-[#333]">{ post.body }</p>
									{
										post.data.tags && (
											<ul class="flex gap-x-[6px]">
												{post.data.tags.map((item: string) => <li class="text-[#333] text-[14px]">#{item}</li>)}
											</ul>
										)
									}
									<div class="flex justify-between items-center mt-[12px] sm:mt-[20px] ">
										<div class="flex items-center text-[14px] leading-none gap-x-[6px]">
											<div>
												<span class="sr-only">calendar icon</span>
												<div class="w-[16px] h-[16px] bg-[#333]" style="mask: url('/icon/calendar.svg') no-repeat center center"></div>
											</div>
											<span class="leading-none">
												<FormattedDate date={post.data.pubDate} />
											</span>
										</div>
										<a class="text-[.9rem] sm:text-[1rem] leading-none" href={`/post/${post.id}/`}>閱讀全文</a>
									</div>
								</div>
							</li>
						))
					}
				</ul>
			</section>
			<section class="mt-[20px]">
				<ul class="flex justify-center gap-[12px]">
					<li>
						<a
							class={ `text-[#333] ${ currentPage <= 1 ? 'pointer-events-none': '' }` }
							href={ currentPage - 1 === 1 ? '/' : `/page/${currentPage - 1}` }>prev</a>
					</li>
					{
						Array.from({ length: lastPage }).map((_item, index) => (
							<li class="w-[20px] text-center" ><a class={ `text-[#333] ${ currentPage - 1 === index ? 'font-bold pointer-events-none': '' }`  } href={ index ? `/page/${index + 1}` : '/' }>{ index + 1 }</a></li>
						))
					}
					<li><a class={ `text-[#333] ${ currentPage >= lastPage ? 'pointer-events-none': '' }` } href={ `/page/${currentPage + 1}` }>next</a></li>
				</ul>
			</section>
		</main>
		<Footer />
	</body>
</html>
